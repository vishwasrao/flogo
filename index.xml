<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Project Flogo - Docs and Tutorials</title>
    <link>https://tibcosoftware.github.io/flogo/</link>
    <description>Recent content on Project Flogo - Docs and Tutorials</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://tibcosoftware.github.io/flogo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Quickstart</title>
      <link>https://tibcosoftware.github.io/flogo/getting-started/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/getting-started/quickstart/</guid>
      <description>We think it is awesome that you want to get started with Project Flogo! To get started you don&amp;rsquo;t even need to install anything other than Docker!
In this quickstart guide we&amp;rsquo;ll walk you through the prerequisites for getting up and running with your first Flogo app.
Getting Docker To make it easy to get started the Flogo Web UI is packaged up as a docker image which you can get from docker hub.</description>
    </item>
    
    <item>
      <title>Flogo Web UI</title>
      <link>https://tibcosoftware.github.io/flogo/getting-started/getting-started-webui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/getting-started/getting-started-webui/</guid>
      <description>Getting Started For an overview of how to get started, check out the Quickstart guide
Installing the Project Flogo Web UI Installing the Project Flogo Web UI is quite simple and requires nothing more than Docker pre-installed on your machine to fetch the Docker image.
Fetching and starting the Web UI To get started with the latest version of the Flogo Web UI paste this command in a terminal window:</description>
    </item>
    
    <item>
      <title>Flogo CLI</title>
      <link>https://tibcosoftware.github.io/flogo/getting-started/getting-started-cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/getting-started/getting-started-cli/</guid>
      <description>Before you get started Before you can get started with the cli tools you need to make sure you the Go programming language installed.
Don&amp;rsquo;t forget to set your GOPATH variable and make sure that $GOPATH/bin is part of your path. (see here or here for more details)
 Installing the cli tools Now that you&amp;rsquo;ve installed the Go programming language there are a few commands you can run to install the cli and make developing with the cli tools even easier</description>
    </item>
    
    <item>
      <title>Tutorial for Flogo CLI</title>
      <link>https://tibcosoftware.github.io/flogo/labs/flogo-cli-interactive-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/labs/flogo-cli-interactive-lab/</guid>
      <description>To check out the Flogo CLI without installing anything on your local machine check out this interactive tutorial</description>
    </item>
    
    <item>
      <title>Tutorial for Flogo Web UI</title>
      <link>https://tibcosoftware.github.io/flogo/labs/flogo-web-interactive-lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/labs/flogo-web-interactive-lab/</guid>
      <description>To check out the Flogo Web UI without installing anything on your local machine check out this interactive tutorial</description>
    </item>
    
    <item>
      <title>Tutorial for Kubernetes</title>
      <link>https://tibcosoftware.github.io/flogo/labs/kubernetes-demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/labs/kubernetes-demo/</guid>
      <description>This demo scneario will help you get up and running with a Flogo demo on Kubernetes. We&amp;rsquo;ll assume you have the following tools installed already. If that is not the case, you might want to install them first. Our Getting Started guide walks you through the installation of Go, the Flogo CLI and Go Dep
 curl golang 1.9+ go dep flogo docker kubectl  In the scenario you&amp;rsquo;ll find a bunch of code blocks from which you can copy the code directly to your terminal.</description>
    </item>
    
    <item>
      <title>Tutorial with Serverless Framework</title>
      <link>https://tibcosoftware.github.io/flogo/labs/serverless/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/labs/serverless/</guid>
      <description>You can deploy your Flogo apps to, for example, AWS Lambda using the Serverless Framework.With the Serverless Framework, you can configure which events should trigger it, where to deploy it and what kind of resources it is allowed to use without going into the AWS console.
Prerequisites In this tutorial, we’ll walk you through deploying your Flogo app to AWS Lambda using Serverless.
You’ll need to have:
 an app built for AWS Lambda the Serverless Framework an AWS account  Note that if you don’t have that done yet, the links will guide you through the steps</description>
    </item>
    
    <item>
      <title>Environment variables</title>
      <link>https://tibcosoftware.github.io/flogo/configuration/environment-vars/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/configuration/environment-vars/</guid>
      <description>List of environment variables to configure the flogo engine
   Environment name Default value Info     FLOGO_LOG_DTFORMAT &amp;ldquo;2006-01-02 15:04:05.000&amp;rdquo; Sets the log date and time format   FLOGO_LOG_LEVEL &amp;ldquo;INFO&amp;rdquo; Sets the log level   FLOGO_RUNNER_TYPE &amp;ldquo;POOLED&amp;rdquo; Sets the type of the runner   FLOGO_RUNNER_WORKERS 5 Sets the number of workers   FLOGO_RUNNER_QUEUE 50 Sets the runner queue size   FLOGO_CONFIG_PATH &amp;ldquo;flogo.</description>
    </item>
    
    <item>
      <title>App structure</title>
      <link>https://tibcosoftware.github.io/flogo/development/apps/app-structure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/apps/app-structure/</guid>
      <description> Every Flogo app has the same basic structure and files for an application.
my_app/ flogo.json src/ my_app/ imports.go main.go vendor/  files The most important files are
 flogo.json : flogo project application configuration descriptor file imports.go : contains go imports for contributions (activities, triggers and models) used by the application main.go : main file for the engine.  directories The most important directories are
 src : the place where all code is stored vendor : the place where go libraries are stored  </description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://tibcosoftware.github.io/flogo/development/flows/tensorflow/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/flows/tensorflow/getting-started/</guid>
      <description>First and foremost, Flogo supports inferencing TensorFlow models, it does not support training of models using incoming data. The training should be performed in Python and the protobuf and checkpoints exported for inferencing at runtime in Flogo.
Before you can begin inferencing TensorFlow models within your Flogo Flows, you’ll need to consider a few requirements.
Pre-requisites The TensorFlow dynamic lib must be installed on both your development machine, as well as the target machine/device.</description>
    </item>
    
    <item>
      <title>App Model</title>
      <link>https://tibcosoftware.github.io/flogo/development/apps/app-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/apps/app-configuration/</guid>
      <description>Flogo Application Model The flogo.json file is the metadata describing an application. The application dictates the dependencies to be used during compile time and can also be embeded into the compiled binary.
{ &amp;quot;name&amp;quot;: &amp;quot;myApp&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;flogo:app&amp;quot;, &amp;quot;version&amp;quot;: &amp;quot;0.0.1&amp;quot;, &amp;quot;description&amp;quot;: &amp;quot;My flogo application description&amp;quot;, &amp;quot;triggers&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;my_rest_trigger&amp;quot;, &amp;quot;ref&amp;quot;: &amp;quot;github.com/TIBCOSoftware/flogo-contrib/trigger/rest&amp;quot;, &amp;quot;settings&amp;quot;: { &amp;quot;port&amp;quot;: &amp;quot;9233&amp;quot; }, &amp;quot;handlers&amp;quot;: [ { &amp;quot;actionId&amp;quot;: &amp;quot;my_simple_flow&amp;quot;, &amp;quot;settings&amp;quot;: { &amp;quot;method&amp;quot;: &amp;quot;GET&amp;quot;, &amp;quot;path&amp;quot;: &amp;quot;/test&amp;quot; } } ] } ], &amp;quot;actions&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;my_simple_flow&amp;quot;, &amp;quot;ref&amp;quot;: &amp;quot;github.</description>
    </item>
    
    <item>
      <title>Best practices for app development</title>
      <link>https://tibcosoftware.github.io/flogo/development/apps/best-practices-app-development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/apps/best-practices-app-development/</guid>
      <description> There are a few best practices that we recommend when developing apps and functions using Flogo.
.gitignore You definitely want to store your apps in a source control system and we recommend the the below template for your .gitignore for Flogo apps
## Project Flogo .gitignore ## To restore all dependencies and prepare the project for build run ## the command `flogo ensure` ## bin folder is constructed using flogo build /bin ## pkg folder is constructed using flogo ensure /pkg ## vendor folder in src is constructed using flogo ensure /src/*/vendor  </description>
    </item>
    
    <item>
      <title>Inferencing</title>
      <link>https://tibcosoftware.github.io/flogo/development/flows/tensorflow/inferencing-tf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/flows/tensorflow/inferencing-tf/</guid>
      <description>Before you begin with the ML Inferencing activity, refer to the Flows &amp;gt; TensorFlow &amp;gt; Getting Started documentation.
Overview of the Inference Activity The inference activity was built to support the concept of plugable frameworks, however the only supported framework is currently TensorFlow. The activity leverages the Golang API from TensorFlow. You don&amp;rsquo;t need Python or anything other than the TensorFlow dynamic library installed on your dev &amp;amp; target machine.</description>
    </item>
    
    <item>
      <title>App Properties</title>
      <link>https://tibcosoftware.github.io/flogo/development/flows/property-bag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/flows/property-bag/</guid>
      <description>In Flogo, the concept of an application-level property bag is made available to flow developers that want to reuse properties across different flows, within the same application for trigger settings or as input to activities. Properties are exposed via the $property resolver and made available to the scopes defined in the mappings documentation.
Flow configuration Properties are defined within the root of the application json, as shown below via the properties element.</description>
    </item>
    
    <item>
      <title>Flow Input/Output Params</title>
      <link>https://tibcosoftware.github.io/flogo/development/flows/io-parameters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/flows/io-parameters/</guid>
      <description>For Flogo a Flow is more inline with the concept of a function, that is, a Flow has both input and output parameters. The concept of decoupling a trigger from a flow is a key part of supporting multiple triggers and re-use/sharing of a flow. A Flow can now operate against the data that it has defined within its declartion, it otherwords, just like a function, the scope of data that a Flow can operate against must reside within either the Flow context (or as an environment variable).</description>
    </item>
    
    <item>
      <title>Iterator</title>
      <link>https://tibcosoftware.github.io/flogo/development/flows/iterators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/flows/iterators/</guid>
      <description>What is an iterator in Flogo? The iterator construct in Flogo enables the iteration of a single activity. The configuration elements are associated with that activity. In Flogo, you can iterate only over a single activity. The iterator acts much like a for loop in any procedural language.
Flow configuration Iterators are associated with an activity. The activity type must be defined as a type 2, which indicates that it is to be iterated over.</description>
    </item>
    
    <item>
      <title>Mappings</title>
      <link>https://tibcosoftware.github.io/flogo/development/flows/mapping/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/flows/mapping/</guid>
      <description>What are mappings? A mapping in a Flogo Flow can be used to assign the value of a variable to that of an input parameters of an activity or to the value of another flow scoped variable.
Types of mappings If you peak under the covers, you&amp;rsquo;ll note that we have a number of different mapping types supported in the Flogo engine. These include:
   Type Description     assign Direct mapping.</description>
    </item>
    
    <item>
      <title>Building your first activity</title>
      <link>https://tibcosoftware.github.io/flogo/development/extensions/building-your-first-activity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/extensions/building-your-first-activity/</guid>
      <description>Creating a new activity for Project Flogo is not that hard! Let&amp;rsquo;s walk through the steps required to create a simple activity.
Please make sure that you have installed the flogo tools as described in Getting Started &amp;gt; Flogo CLI.
 The basic framework The easiest way to start creating activities is to have the flogogen CLI create the basic framework for you. The flogogen CLI takes two important parameters to create the framework for activities:</description>
    </item>
    
    <item>
      <title>Continuously testing Flogo activities</title>
      <link>https://tibcosoftware.github.io/flogo/development/extensions/continuously-testing-flogo-activities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/extensions/continuously-testing-flogo-activities/</guid>
      <description>Depending on where you store the source code and how publicly you want to have the code available you have a few options to continuously testing Flogo activities. Let&amp;rsquo;s look at Jenkins when using a local git server and Travis-CI for activities on GitHub
Intro The project structure we&amp;rsquo;ll use has separate folders for activities and triggers. A sample layout would look like this:
├───&amp;lt;Repo root&amp;gt; │ └───activity | | └───&amp;lt;my-activity&amp;gt; | | |───&amp;lt;all my files&amp;gt; │ └───trigger | └───&amp;lt;my-trigger&amp;gt; | |───&amp;lt;all my files&amp;gt;  A real life repository I created looks like this.</description>
    </item>
    
    <item>
      <title>Application Configuration Provider</title>
      <link>https://tibcosoftware.github.io/flogo/development/extensions/application-configuration-provider/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/extensions/application-configuration-provider/</guid>
      <description>Unless you want to provide the application configuration (for example: flogo.json) in a different way or format you should not worry about this feature.
We have provided an extension mechanism for you to override the default way of providing the application configuration if needed.
Topics  Default behavior Embedded configuration Custom configuration  Default behavior Out of the box, the default behavior will be as follows:
 Configuration will be passed to the engine in the JSON format Default path for the JSON file will be in the same directory as the application&amp;rsquo;s binary Default name for the JSON file will be &amp;ldquo;flogo.</description>
    </item>
    
    <item>
      <title>Reply</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/activities/actreply/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/activities/actreply/</guid>
      <description>Reply This activity allows you to reply to a trigger invocation and map output values. After replying to the trigger, this activity will allow the flow to continue further.
Installation Flogo Web This activity comes out of the box with the Flogo Web UI
Flogo CLI flogo install github.com/TIBCOSoftware/flogo-contrib/activity/actreply  Schema Input and Output:
{ &amp;quot;input&amp;quot;:[ { &amp;quot;name&amp;quot;: &amp;quot;mappings&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;array&amp;quot;, &amp;quot;required&amp;quot;: true, &amp;quot;display&amp;quot;: { &amp;quot;name&amp;quot;: &amp;quot;Mapper&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;mapper&amp;quot;, &amp;quot;mapperOutputScope&amp;quot; : &amp;quot;action.</description>
    </item>
    
    <item>
      <title>Return</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/activities/actreturn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/activities/actreturn/</guid>
      <description>Return This activity allows you to reply to a trigger invocation and map output values. After replying to the trigger, the flow ends (this will be the last actvity in your flow).
Installation Flogo Web This activity comes out of the box with the Flogo Web UI
Flogo CLI flogo install github.com/TIBCOSoftware/flogo-contrib/activity/actreply  Schema Input and Output:
{ &amp;quot;input&amp;quot;:[ { &amp;quot;name&amp;quot;: &amp;quot;mappings&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;array&amp;quot;, &amp;quot;required&amp;quot;: true, &amp;quot;display&amp;quot;: { &amp;quot;name&amp;quot;: &amp;quot;Mapper&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;mapper&amp;quot;, &amp;quot;mapperOutputScope&amp;quot; : &amp;quot;action.</description>
    </item>
    
    <item>
      <title>Aggregate</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/activities/aggregate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/activities/aggregate/</guid>
      <description>Aggregate This activity allows you to aggregate data and calculate an average or sliding average.
Installation Flogo Web This activity comes out of the box with the Flogo Web UI
Flogo CLI flogo install github.com/TIBCOSoftware/flogo-contrib/activity/aggregate  Schema Inputs and Outputs:
{ &amp;quot;input&amp;quot;:[ { &amp;quot;name&amp;quot;: &amp;quot;function&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true, &amp;quot;allowed&amp;quot; : [&amp;quot;block_avg&amp;quot;, &amp;quot;moving_avg&amp;quot;, &amp;quot;timeblockavg&amp;quot;] }, { &amp;quot;name&amp;quot;: &amp;quot;windowSize&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;value&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;number&amp;quot; } ], &amp;quot;output&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;result&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;number&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;report&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;boolean&amp;quot; } ] }  Settings    Setting Required Description     function True The aggregate fuction, currently only average is supported   windowSize True The window size of the values to aggregate   value False The value to aggregate    Example The below example aggregates a &amp;lsquo;temperature&amp;rsquo; attribute with a moving window of size 5:</description>
    </item>
    
    <item>
      <title>App</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/activities/app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/activities/app/</guid>
      <description>App This activity allows you to set and use global attributes throughout your app.
Installation Flogo Web This activity comes out of the box with the Flogo Web UI
Flogo CLI flogo install github.com/TIBCOSoftware/flogo-contrib/activity/actreply  Schema Inputs and Outputs:
{ &amp;quot;input&amp;quot;:[ { &amp;quot;name&amp;quot;: &amp;quot;attribute&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;operation&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot; : true, &amp;quot;allowed&amp;quot; : [&amp;quot;ADD&amp;quot;,&amp;quot;GET&amp;quot;,&amp;quot;UPDATE&amp;quot;] }, { &amp;quot;name&amp;quot;: &amp;quot;type&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;allowed&amp;quot; : [	&amp;quot;string&amp;quot;, &amp;quot;integer&amp;quot;, &amp;quot;number&amp;quot;, &amp;quot;boolean&amp;quot;, &amp;quot;object&amp;quot;, &amp;quot;array&amp;quot;, &amp;quot;params&amp;quot;] }, { &amp;quot;name&amp;quot;: &amp;quot;value&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;any&amp;quot; } ], &amp;quot;output&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;value&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;any&amp;quot; } ] }  Settings    Setting Required Description     attribute True The name of the attribute   operation True The operation to perform   type False The type of the attribute, only used with NEW operation   value (input) False The value of the attribute, only used with ADD and UPDATE   value (output)  The returned value of the attribute, only used with GET and UPDATE    Configuration Examples New Add a new &amp;lsquo;myAttr&amp;rsquo; attribute of type string with the initial value of foo:</description>
    </item>
    
    <item>
      <title>AWS IoT</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/activities/awsiot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/activities/awsiot/</guid>
      <description>AWS IoT This activity allows you to update a device shadow on AWS.
Installation Flogo Web This activity comes out of the box with the Flogo Web UI
Flogo CLI flogo add activity github.com/TIBCOSoftware/flogo-contrib/activity/awsiot  Schema Inputs and Outputs:
{ &amp;quot;input&amp;quot;:[ { &amp;quot;name&amp;quot;: &amp;quot;thingName&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;awsEndpoint&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;desired&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;params&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;reported&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;params&amp;quot; } ] }  Settings    Setting Required Description     thingName True The name of the &amp;ldquo;thing&amp;rdquo; in Aws IoT   awsEndpoint True The Aws Iot Endpoint for the account   desired False The desired state to update   reported False The reported state to update    Configuration Certificate Installation The activity looks for the AWS device certificates in a &amp;ldquo;things&amp;rdquo; directory relative to where the engine was started.</description>
    </item>
    
    <item>
      <title>Amazon SNS</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/activities/awssns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/activities/awssns/</guid>
      <description>Amazon SNS This activity allows you to send SMS text messages using Amazon Simple Notification Services.
Installation Flogo Web This activity comes out of the box with the Flogo Web UI
Flogo CLI flogo add activity github.com/TIBCOSoftware/flogo-contrib/activity/awssns  Schema Inputs and Outputs:
{ &amp;quot;input&amp;quot;:[ { &amp;quot;name&amp;quot;: &amp;quot;accessKey&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: &amp;quot;true&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;secretKey&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: &amp;quot;true&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;region&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: &amp;quot;true&amp;quot;, &amp;quot;allowed&amp;quot; : [&amp;quot;us-east-2&amp;quot;,&amp;quot;us-east-1&amp;quot;,&amp;quot;us-west-1&amp;quot;,&amp;quot;us-west-2&amp;quot;,&amp;quot;ap-south-1&amp;quot;,&amp;quot;ap-northeast-2&amp;quot;,&amp;quot;ap-southeast-1&amp;quot;,&amp;quot;ap-southeast-2&amp;quot;,&amp;quot;ap-northeast-1&amp;quot;,&amp;quot;cn-northwest-1&amp;quot;,&amp;quot;ca-central-1&amp;quot;,&amp;quot;eu-central-1&amp;quot;,&amp;quot;eu-west-1&amp;quot;,&amp;quot;eu-west-2&amp;quot;,&amp;quot;sa-east-1&amp;quot;] }, { &amp;quot;name&amp;quot;: &amp;quot;smsType&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;allowed&amp;quot; : [&amp;quot;Promotional&amp;quot;, &amp;quot;Transactional&amp;quot;], &amp;quot;value&amp;quot;: &amp;quot;Promotional&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;from&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: &amp;quot;true&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;to&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: &amp;quot;true&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;message&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: &amp;quot;true&amp;quot; } ], &amp;quot;output&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;messageId&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; } ] }  Settings    Setting Required Description     accessKey True Your Amazon access key ID   secretKey True Your Amazon secret sccess Key   region True The default AWS region to use.</description>
    </item>
    
    <item>
      <title>CoAP</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/activities/coap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/activities/coap/</guid>
      <description>CoAP This activity allows you to send a CoAP message.
Installation Flogo Web This activity comes out of the box with the Flogo Web UI
Flogo CLI flogo add activity github.com/TIBCOSoftware/flogo-contrib/activity/coap  Schema Inputs and Outputs:
{ &amp;quot;input&amp;quot;:[ { &amp;quot;name&amp;quot;: &amp;quot;uri&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;method&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true, &amp;quot;allowed&amp;quot; : [&amp;quot;GET&amp;quot;, &amp;quot;POST&amp;quot;, &amp;quot;PUT&amp;quot;, &amp;quot;DELETE&amp;quot;] }, { &amp;quot;name&amp;quot;: &amp;quot;queryParams&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;params&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;type&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;messageId&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;options&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;params&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;payload&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; } ], &amp;quot;output&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;response&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; } ] }  Settings    Setting Required Description     uri True The CoAP resource URI   method True The CoAP method (Accepted values are POST, GET, PUT, and DELETE)   queryParams False The query parameters   type False Message Type (Confirmable, NonConfirmable, Acknowledgement, Reset)   messageId False ID used to detect duplicates and for optional reliability   options False CoAP options   payload False The message payload    Example The below example sends a &amp;ldquo;hello world&amp;rdquo; message via CoAP:</description>
    </item>
    
    <item>
      <title>Coachbase</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/activities/couchbase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/activities/couchbase/</guid>
      <description>Couchbase This activity allows you to connect to a Couchbase server
Installation Flogo Web This activity comes out of the box with the Flogo Web UI
Flogo CLI flogo install github.com/TIBCOSoftware/flogo-contrib/activity/couchbase  Schema Inputs and Outputs:
{ &amp;quot;input&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;key&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;data&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;method&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;allowed&amp;quot;: [ &amp;quot;Insert&amp;quot;, &amp;quot;Upsert&amp;quot;, &amp;quot;Remove&amp;quot;, &amp;quot;Get&amp;quot; ], &amp;quot;value&amp;quot;: &amp;quot;Insert&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;expiry&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot;, &amp;quot;value&amp;quot;: 0, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;server&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;username&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;password&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;bucket&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;bucketPassword&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; } ], &amp;quot;output&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;output&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;any&amp;quot; } ] }  Settings    Setting Required Description     key True The document key identifier   data False The document data (when the method is get this field is ignored)   method True The method type (Insert, Upsert, Remove or Get).</description>
    </item>
    
    <item>
      <title>Counter</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/activities/counter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/activities/counter/</guid>
      <description>Counter This activity allows you to use a global counter.
Installation Flogo Web This activity comes out of the box with the Flogo Web UI
Flogo CLI flogo add activity github.com/TIBCOSoftware/flogo-contrib/activity/counter  Schema Inputs and Outputs:
{ &amp;quot;input&amp;quot;:[ { &amp;quot;name&amp;quot;: &amp;quot;counterName&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;increment&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;boolean&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;reset&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;boolean&amp;quot; } ], &amp;quot;output&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;value&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot; } ] }  Settings    Setting Required Description     counterName True The name of the counter   increment False If this field is set to true, increment the counter by one   reset False Reset the counter.</description>
    </item>
    
    <item>
      <title>Error</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/activities/error/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/activities/error/</guid>
      <description>Error This activity allows you to cause an explicit error in the flow (throw an error).
Installation Flogo Web This activity comes out of the box with the Flogo Web UI
Flogo CLI flogo add activity github.com/TIBCOSoftware/flogo-contrib/activity/error  Schema Inputs and Outputs:
{ &amp;quot;input&amp;quot;:[ { &amp;quot;name&amp;quot;: &amp;quot;message&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;data&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot; } ], &amp;quot;output&amp;quot;: [ ] }  Settings    Setting Required Description     message False The error message you want to throw   data False The error data you want to throw    Configuration Examples The below example throws a simple error with a message:</description>
    </item>
    
    <item>
      <title>GPIO</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/activities/gpio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/activities/gpio/</guid>
      <description>GPIO This activity allows you to control the GPIO pins on a Raspberry Pi
Installation Flogo Web This activity comes out of the box with the Flogo Web UI
Flogo CLI flogo add activity github.com/TIBCOSoftware/flogo-contrib/activity/gpio  Schema Inputs and Outputs:
{ &amp;quot;input&amp;quot;:[ { &amp;quot;name&amp;quot;: &amp;quot;method&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true, &amp;quot;allowed&amp;quot; : [&amp;quot;Direction&amp;quot;, &amp;quot;Set State&amp;quot;, &amp;quot;Read State&amp;quot;, &amp;quot;Pull&amp;quot;] }, { &amp;quot;name&amp;quot;: &amp;quot;pinNumber&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;direction&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;allowed&amp;quot; : [&amp;quot;Input&amp;quot;, &amp;quot;Output&amp;quot;] }, { &amp;quot;name&amp;quot;: &amp;quot;state&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;allowed&amp;quot; : [&amp;quot;High&amp;quot;, &amp;quot;Low&amp;quot;] }, { &amp;quot;name&amp;quot;: &amp;quot;Pull&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;allowed&amp;quot; : [&amp;quot;Up&amp;quot;, &amp;quot;Down&amp;quot;, &amp;quot;Off&amp;quot;] } ], &amp;quot;output&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;result&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot; } ] }  Settings    Setting Required Description     method True The method to take action for specified pin (Allowed values are Direction, Set State, Read State, and Pull)   pinNumber True The pin number of the GPIO   direction False Set the direction of the pin (Allowed values are Input and Output)   state False Set the state of the pin (Allowed values are High and Low)   Pull False Pull the pin to the specified value (Allowed values are Up, Down, and Off)   result False The result of the operation    Examples Get pin state The below example retrieves the state of pin 23:</description>
    </item>
    
    <item>
      <title>Publish Kafka Message</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/activities/kafkapub/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/activities/kafkapub/</guid>
      <description>Publish Kafka Message This activity allows you to send a Kafka message
Installation Flogo Web This activity comes out of the box with the Flogo Web UI
Flogo CLI flogo install github.com/TIBCOSoftware/flogo-contrib/activity/kafkapub  Schema Inputs and Outputs:
{ &amp;quot;input&amp;quot;:[ { &amp;quot;name&amp;quot;: &amp;quot;BrokerUrls&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;Topic&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;Message&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;user&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: false }, { &amp;quot;name&amp;quot;: &amp;quot;password&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: false }, { &amp;quot;name&amp;quot;: &amp;quot;truststore&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: false } ], &amp;quot;output&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;partition&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;int&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;offset&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;long&amp;quot; } ] }  Settings    Setting Required Description     BrokerUrls True The Kafka cluster to connect to   Token True The Kafka topic on which to place the message   Message True The text message to send   user False If connectiong to a SASL enabled port, the userid to use for authentication   password False If connectiong to a SASL enabled port, the password to use for authentication   truststore False If connectiong to a TLS secured port, the directory containing the certificates representing the trust chain for the connection.</description>
    </item>
    
    <item>
      <title>Trigger Lambda Function</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/activities/lambda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/activities/lambda/</guid>
      <description>Trigger Lambda function This activity allows you to invoke an AWS Lambda function via ARN and provide the access key and secret for authentication.
Installation Flogo Web This activity comes out of the box with the Flogo Web UI
Flogo CLI flogo add activity github.com/TIBCOSoftware/flogo-contrib/activity/lambda  Schema Inputs and Outputs:
{ &amp;quot;input&amp;quot;:[ { &amp;quot;name&amp;quot;: &amp;quot;arn&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;region&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;accessKey&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot; : false }, { &amp;quot;name&amp;quot;: &amp;quot;secretKey&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot; : false }, { &amp;quot;name&amp;quot;: &amp;quot;payload&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;any&amp;quot;, &amp;quot;required&amp;quot; : true } ], &amp;quot;output&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;value&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;any&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;result&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;any&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;status&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot; } ] }  Settings    Setting Required Description     arn True The ARN of the Lambda function to invoke   region True The AWS region in which you want to invoke the function   accessKey False AWS access key for the user to invoke the function   secretKey False AWS secret key for the user to invoke te function   payload True The payload to send to the function.</description>
    </item>
    
    <item>
      <title>Log</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/activities/log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/activities/log/</guid>
      <description>Log This activity allows you to write log messages.
Installation Flogo Web This activity comes out of the box with the Flogo Web UI
Flogo CLI flogo add activity github.com/TIBCOSoftware/flogo-contrib/activity/log  Schema Inputs and Outputs:
{ &amp;quot;input&amp;quot;:[ { &amp;quot;name&amp;quot;: &amp;quot;message&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;flowInfo&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;boolean&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;false&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;addToFlow&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;boolean&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;false&amp;quot; } ], &amp;quot;output&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;message&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; } ] }  Settings    Setting Required Description     message False The message to log   flowInfo False If set to true this will append the flow information to the log message   addToFlow False If set to true this will add the log message to the &amp;lsquo;message&amp;rsquo; output of the activity and make it available in further activities   message False The message that was logged    Examples The below example logs a message &amp;lsquo;test message&amp;rsquo;:</description>
    </item>
    
    <item>
      <title>Mapper</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/activities/mapper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/activities/mapper/</guid>
      <description>Mapper This activity allows you to map values to the working attribute set of a flow.
Installation Flogo Web This activity comes out of the box with the Flogo Web UI
Flogo CLI flogo install github.com/TIBCOSoftware/flogo-contrib/activity/mapper  Schema Input and Output:
{ &amp;quot;input&amp;quot;:[ { &amp;quot;name&amp;quot;: &amp;quot;mappings&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;array&amp;quot;, &amp;quot;required&amp;quot;: true, &amp;quot;display&amp;quot;: { &amp;quot;name&amp;quot;: &amp;quot;Mapper&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;mapper&amp;quot;, &amp;quot;mapperOutputScope&amp;quot; : &amp;quot;action&amp;quot; } } ], &amp;quot;output&amp;quot;: [ ] }  Settings    Setting Required Description     mappings True An array of mappings that are executed when the activity runs    Example The below example allows you to configure the activity to reply and set the output values to literals &amp;ldquo;name&amp;rdquo; (a string) and 2 (an integer).</description>
    </item>
    
    <item>
      <title>REST</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/activities/rest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/activities/rest/</guid>
      <description>REST This activity allows you to invoke a REST service.
Installation Flogo Web This activity comes out of the box with the Flogo Web UI
Flogo CLI flogo add activity github.com/TIBCOSoftware/flogo-contrib/activity/rest  Schema Inputs and Outputs:
{ &amp;quot;input&amp;quot;:[ { &amp;quot;name&amp;quot;: &amp;quot;method&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true, &amp;quot;allowed&amp;quot; : [&amp;quot;GET&amp;quot;, &amp;quot;POST&amp;quot;, &amp;quot;PUT&amp;quot;, &amp;quot;PATCH&amp;quot;, &amp;quot;DELETE&amp;quot;] }, { &amp;quot;name&amp;quot;: &amp;quot;uri&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;proxy&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: false }, { &amp;quot;name&amp;quot;: &amp;quot;pathParams&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;params&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;queryParams&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;params&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;header&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;params&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;skipSsl&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;boolean&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;false&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;content&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;any&amp;quot; } ], &amp;quot;output&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;result&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;any&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;status&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot; } ] }  Settings    Setting Required Description     method True The HTTP method to invoke (Allowed values are GET, POST, PUT, DELETE, and PATCH)   uri True The URI of the service to invoke   proxy False The address of the proxy server to be used   pathParams False The path parameters.</description>
    </item>
    
    <item>
      <title>Subflow</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/activities/subflow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/activities/subflow/</guid>
      <description>Subflow This activity allows you to start a subflow.
Installation Flogo Web This activity comes out of the box with the Flogo Web UI
Flogo CLI flogo install github.com/TIBCOSoftware/flogo-contrib/activity/subflow  Schema { &amp;quot;settings&amp;quot;:[ { &amp;quot;name&amp;quot;: &amp;quot;flowURI&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true } ] }  The Input/Output schema is determined from the Input/Output metadata of the subflow that is being executed
Settings    Setting Required Description     flowURI True The URI of the flow to execute    Examples The below example executes &amp;ldquo;mysubflow&amp;rdquo; and set its input values to literals &amp;ldquo;foo&amp;rdquo; and &amp;ldquo;bar&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Twilio</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/activities/twilio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/activities/twilio/</guid>
      <description>Twilio This activity allows you to send a SMS via Twilio.
Installation Flogo Web This activity comes out of the box with the Flogo Web UI
Flogo CLI flogo add activity github.com/TIBCOSoftware/flogo-contrib/activity/twilio  Schema Inputs and Outputs:
{ &amp;quot;input&amp;quot;:[ { &amp;quot;name&amp;quot;: &amp;quot;accountSID&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;authToken&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;from&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;to&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;message&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; } ], &amp;quot;output&amp;quot;: [] }  Settings    Setting Required Description     accountSID False The Twilio account SID   authToken False The Twilio auth token   from False The Twilio number you are sending the SMS from   to False The number you are sending the SMS to.</description>
    </item>
    
    <item>
      <title>WebSocket Message</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/activities/wsmessage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/activities/wsmessage/</guid>
      <description>Send WebSocket message This activity allows you to send a message to a WebSocket server.
Installation Flogo Web This activity comes out of the box with the Flogo Web UI
Flogo CLI flogo add activity github.com/TIBCOSoftware/flogo-contrib/activity/sendwsmessage  Schema Inputs and Outputs:
{ &amp;quot;input&amp;quot;:[ { &amp;quot;name&amp;quot;: &amp;quot;Server&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;Channel&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;Destination&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;Message&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;Username&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;Password&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;&amp;quot; } ], &amp;quot;output&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;output&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; } ] }  Settings    Setting Required Description     Server False The WebSocket server to connect to (e.</description>
    </item>
    
    <item>
      <title>CLI</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/triggers/cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/triggers/cli/</guid>
      <description>tibco-cli This trigger provides your flogo application the ability to run as a CLI app, that is, accept input via the CLI &amp;amp; run once till completion and return the results to stdout.
Installation flogo install github.com/TIBCOSoftware/flogo-contrib/trigger/cli  Schema Settings, Outputs and Endpoint:
{ &amp;quot;output&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;args&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;array&amp;quot; } ], &amp;quot;handler&amp;quot;: { &amp;quot;settings&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;command&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;default&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;boolean&amp;quot; } ] } }  Settings Trigger:    Output Description     args The array of arguments    Handler:    Setting Description     command The command invoked   default Indicates if its the default command    Example Configurations Triggers are configured via the triggers section of your application.</description>
    </item>
    
    <item>
      <title>CoAP</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/triggers/coap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/triggers/coap/</guid>
      <description>tibco-coap This trigger provides your flogo application the ability to start a flow via CoAP
Installation flogo add trigger github.com/TIBCOSoftware/flogo-contrib/trigger/coap  Schema Settings, Outputs and Endpoint:
&amp;quot;settings&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;port&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot;, } ], &amp;quot;output&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;payload&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; } ], &amp;quot;endpoint&amp;quot;: { &amp;quot;settings&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;method&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot; : true }, { &amp;quot;name&amp;quot;: &amp;quot;path&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot; : true } ] }  Settings Trigger:    Setting Description     port Used to override the standard CoAP server port of 5683    Endpoint:    Setting Description     method The CoAP method   path The resource path    Example Configurations Triggers are configured via the triggers.</description>
    </item>
    
    <item>
      <title>Receive Kafka Message</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/triggers/kafkasub/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/triggers/kafkasub/</guid>
      <description>tibco-kafkasub This trigger provides your flogo application with the ability to subscribe to messages from a kafka cluster and start a flow with the contents of the message. It is assumed that the messages plain text. The trigger supports TLS and SASL.
To make a TLS connection specifiy a trust dir containing the caroots for your kafka server and a broker URL which points to an SSL port. To use SASL simply provide the username and password in the settings config.</description>
    </item>
    
    <item>
      <title>Lambda</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/triggers/lambda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/triggers/lambda/</guid>
      <description> tibco-lambda This trigger provides your flogo application the ability to start a flow as an AWS Lambda function
Installation flogo install trigger github.com/TIBCOSoftware/flogo-contrib/trigger/lambda  Schema Settings, Outputs:
{ &amp;quot;settings&amp;quot;: [ ], &amp;quot;output&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;context&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;evt&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; } ] }  A sample of the context object:
{ &amp;quot;awsRequestId&amp;quot;:&amp;quot;&amp;quot;, &amp;quot;functionName&amp;quot;:&amp;quot;&amp;quot;, &amp;quot;functionVersion&amp;quot;:&amp;quot;&amp;quot;, &amp;quot;logGroupName&amp;quot;:&amp;quot;&amp;quot;, &amp;quot;logStreamName&amp;quot;:&amp;quot;&amp;quot;, &amp;quot;memoryLimitInMB&amp;quot;:0 }  </description>
    </item>
    
    <item>
      <title>MQTT</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/triggers/mqtt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/triggers/mqtt/</guid>
      <description>tibco-mqtt This trigger provides your flogo application the ability to start a flow via MQTT
Installation flogo install github.com/TIBCOSoftware/flogo-contrib/trigger/mqtt  Schema Settings, Outputs and Endpoint:
{ &amp;quot;settings&amp;quot;:[ { &amp;quot;name&amp;quot;: &amp;quot;broker&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;id&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;user&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;password&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;store&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;topic&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;qos&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;number&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;cleansess&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;boolean&amp;quot; } ], &amp;quot;endpoint&amp;quot;: { &amp;quot;settings&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;topic&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; } ] } }  Example Configurations Triggers are configured via the triggers.</description>
    </item>
    
    <item>
      <title>REST</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/triggers/rest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/triggers/rest/</guid>
      <description>tibco-rest This trigger provides your flogo application the ability to start a flow via REST over HTTP
Installation flogo add trigger github.com/TIBCOSoftware/flogo-contrib/trigger/rest  Schema Settings, Outputs and Endpoint:
{ &amp;quot;settings&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;port&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot; } ], &amp;quot;output&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;pathParams&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;params&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;queryParams&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;params&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;header&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;params&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;content&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot; } ], &amp;quot;endpoint&amp;quot;: { &amp;quot;settings&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;method&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot; : true }, { &amp;quot;name&amp;quot;: &amp;quot;path&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot; : true } ] } }  Settings Trigger:    Setting Description     port The port to listen on    Endpoint:    Setting Description     method The HTTP method   path The resource path    Example Configurations Triggers are configured via the triggers.</description>
    </item>
    
    <item>
      <title>Timer</title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/triggers/timer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/triggers/timer/</guid>
      <description>tibco-timer This trigger provides your flogo application the ability to schedule a flow via scheduling service
Installation flogo add trigger github.com/TIBCOSoftware/flogo-contrib/trigger/timer  Schema Outputs and Handler:
{ &amp;quot;output&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;params&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;params&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;content&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;object&amp;quot; } ], &amp;quot;handler&amp;quot;: { &amp;quot;settings&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;repeating&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;false&amp;quot;, }, { &amp;quot;name&amp;quot;: &amp;quot;notImmediate&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;true&amp;quot;, }, { &amp;quot;name&amp;quot;: &amp;quot;startDate&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;2018-01-01T12:00:00Z00:00&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;hours&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;minutes&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;seconds&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; } ] } }  Example Configurations Triggers are configured via the triggers.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>https://tibcosoftware.github.io/flogo/flogo-cli/tools-overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/flogo-cli/tools-overview/</guid>
      <description>Project Flogo provides different command-line interfaces and which you need depends on the task you need to execute.
 flogo: This CLI gives you the ability to build flows and microservices. With this tool you can, among other things, create your applications, build applications and install new extensions. This tool is great to use with Continuous Integration and Continuous Deployment tools like Jenkins and Travis-CI. flogodevice: This CLI gives you the ability to build your apps to run on different types of devices using the device profile option.</description>
    </item>
    
    <item>
      <title>flogo</title>
      <link>https://tibcosoftware.github.io/flogo/flogo-cli/flogo-cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/flogo-cli/flogo-cli/</guid>
      <description>The flogo CLI tool gives you the ability to build flows and microservices. With this tool you can, among other things, create your applications, build applications and install new extensions. It is also great to use with Continuous Integration and Continuous Deployment tools like Jenkins and Travis-CI. Below is a complete list of all all commands supported, including samples on how to use them.
Please make sure that you have installed the flogo tools as described in Getting Started &amp;gt; Flogo CLI</description>
    </item>
    
    <item>
      <title>flogogen</title>
      <link>https://tibcosoftware.github.io/flogo/flogo-cli/flogogen-cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/flogo-cli/flogogen-cli/</guid>
      <description>The flogogen CLI tool is the tool you want to use if you&amp;rsquo;re looking to extend the functionality that Project Flogo offers out of the box, this is the tool you want to use. Flogogen generates the scafolding used by extensions (activity/trigger) developers to build new extensions.. Below is a complete list of all all commands supported, including samples on how to use them.
Please make sure that you have installed the flogo tools as described in Getting Started &amp;gt; Flogo CLI</description>
    </item>
    
    <item>
      <title>flogodevice</title>
      <link>https://tibcosoftware.github.io/flogo/flogo-cli/flogodevice-cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/flogo-cli/flogodevice-cli/</guid>
      <description>The flogodevice CLI tool gives you the ability to build your apps to run on different types of devices using the device profile option. Below is a complete list of all all commands supported, including samples on how to use them.
Please make sure that you have installed the flogo tools as described in Getting Started &amp;gt; Flogo CLI and that PlatformIO is installed as well.
 build Build the flogo device application</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://tibcosoftware.github.io/flogo/deployments/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/deployments/docker/</guid>
      <description>Flogo is an Ultralight Edge Microservices Framework so building docker images is not only really easy, because it can embed all dependencies it can also run inside of super small docker containers.
Using flogo Out of the box, Flogo has the option to build a docker container from the app.
flogo build -e -docker &amp;lt;trigger id&amp;gt;  The above command will build a Flogo app, with embedded configuration (-e), and create a docker image where it can expose the PORT based on which trigger ID you specify.</description>
    </item>
    
    <item>
      <title>Cloud Foundry</title>
      <link>https://tibcosoftware.github.io/flogo/deployments/cloud-foundry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/deployments/cloud-foundry/</guid>
      <description>Cloud Foundry is an open-source platform as a service (PaaS) that provides you with a choice of clouds, developer frameworks, and application services.
If you want to run Flogo apps in a Cloud Foundry environment, you have two options:
 Using docker containers Using the binary buildpack  If you want to try out Pivotal Cloud Foundry, you might to check out PCF Dev and follow the first three steps to get your environment up and running.</description>
    </item>
    
    <item>
      <title>Kubernetes</title>
      <link>https://tibcosoftware.github.io/flogo/deployments/kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/deployments/kubernetes/</guid>
      <description>Kubernetes is an open-source system for automating deployment, scaling, and management of containerized applications. It groups containers that make up an application into logical units for easy management and discovery.
For this scenario to work you&amp;rsquo;ll need to have access to a Kubernetes environment. If you haven’t set up your own Kubernetes cluster yet, you might want to look at minikube. The team has made an amazing effort to make it super easy to run your own cluster locally with minimal installation effort.</description>
    </item>
    
    <item>
      <title>How-to for IOT</title>
      <link>https://tibcosoftware.github.io/flogo/iot/how-to/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/iot/how-to/</guid>
      <description>Creating a flogo application is easy and we&amp;rsquo;ve outlined the steps for you in this howto guide. This guide will walk you through the steps required to create a simple flogo application which can also be used on an IOT device.
Prerequisites Before you can get started building IOT applications with flogo, you need to have the following prerequisites installed:
 The Go programming language should be installed. In order to simplify development and building in Go, we recommend using the gb build tool.</description>
    </item>
    
    <item>
      <title>Raspberry Pi</title>
      <link>https://tibcosoftware.github.io/flogo/iot/device-pi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/iot/device-pi/</guid>
      <description>You can run your Flogo application on a Raspberry Pi device. (https://www.raspberrypi.org/) This documents contains all relevant information on this device including how to build.
Build To build a flogo application for Raspberry Pi, you simply use the build command with the appropriate enviroment variables set.
On mac or linux you execute the following command:
env GOARM=6 GOARCH=arm GOOS=linux flogo build -o  On windows you excute the following commands:</description>
    </item>
    
    <item>
      <title>Intel Edison</title>
      <link>https://tibcosoftware.github.io/flogo/iot/device-edison/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/iot/device-edison/</guid>
      <description>You can run your Flogo application on a Edison device. This documents contains all relevant information on this device including how to build.
Build To build a flogo application for Edison, you simply use the build command with the appropriate enviroment variables set.
On mac or linux you execute the following command:
env GOARCH=386 GOOS=linux flogo build -o  On windows you excute the following commands:
SET GOARCH=386 SET GOOS=linux flogo build -o  This will compile your application and place the binary in the bin directory.</description>
    </item>
    
    <item>
      <title>C.H.I.P</title>
      <link>https://tibcosoftware.github.io/flogo/iot/device-chip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/iot/device-chip/</guid>
      <description>You can run your Flogo application on a C.H.I.P. device. (https://getchip.com/pages/chip) This documents contains all relevant information on this device including how to build.
Build To build a flogo application for C.H.I.P., you simply use the build command with the appropriate enviroment variables set.
On mac or linux you execute the following command:
env GOARM=7 GOARCH=arm GOOS=linux flogo build -o  On windows you excute the following commands:
SET GOARM=7 SET GOARCH=arm SET GOOS=linux flogo build -o  This will compile your application and place the binary in the bin directory.</description>
    </item>
    
    <item>
      <title>BeagleBone</title>
      <link>https://tibcosoftware.github.io/flogo/iot/device-beaglebone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/iot/device-beaglebone/</guid>
      <description>You can run your Flogo application on a BeagleBone device. (http://beagleboard.org/bone) This documents contains all relevant information on this device including how to build.
Build To build a flogo application for BeagleBone, you simply use the build command with the appropriate enviroment variables set.
On mac or linux you execute the following command:
env GOARM=7 GOARCH=arm GOOS=linux flogo build -o  On windows you excute the following commands:
SET GOARM=7 SET GOARCH=arm SET GOOS=linux flogo build -o  This will compile your application and place the binary in the bin directory.</description>
    </item>
    
    <item>
      <title>Flogo and Lambda</title>
      <link>https://tibcosoftware.github.io/flogo/faas/how-to/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/faas/how-to/</guid>
      <description>Embrace serverless computing with Flogo&amp;rsquo;s first class support for AWS Lambda. Infinitely scale Flogo&amp;rsquo;s ultralight functions and scale back to zero when not in use with AWS Lambda&amp;rsquo;s NoOps and seamless scaling capabilities.
We&amp;rsquo;ll guide you through the set of steps required to build the most basic of functions for deployment to AWS Lambda. The flow you&amp;rsquo;ll build will be the function you deploy.</description>
    </item>
    
    <item>
      <title>Contributing to Project Flogo</title>
      <link>https://tibcosoftware.github.io/flogo/contributing/contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/contributing/contributing/</guid>
      <description>Are you interested in contributing to Project Flogo? If so, this doc was created specifically for you! If you’re not ready to start contributing code, no problem, feel free to check out the documentation issues and begin my helping enhance the documentation!
Detailed instructions on contributing to the documentation and sharing your projects via the showcase can be found in our documentation, here:
https://tibcosoftware.github.io/flogo/contributing/
If you’re ready and interested to make code contributions, we’ve tried to make the process as easy as possible.</description>
    </item>
    
    <item>
      <title>Building the docs website</title>
      <link>https://tibcosoftware.github.io/flogo/contributing/contribute-to-docs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/contributing/contribute-to-docs/</guid>
      <description>If you want to contribute to the documentation, that is awesome! Your help is very much appreciated, but please do keep in mind the instructions below.
Prerequisites These documentation pages are built with Hugo and we do make some assumptions:
 You have Git 2.5 or greater installed on your machine. You have a GitHub account. Signing up for GitHub is free. You have Hugo installed on your machine.  In Hugo, pages are the core of your site.</description>
    </item>
    
    <item>
      <title>Contributing to the Showcase</title>
      <link>https://tibcosoftware.github.io/flogo/contributing/contribute-to-showcase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/contributing/contribute-to-showcase/</guid>
      <description>Have an activity, trigger or app that you want to share with the Flogo comunity? That&amp;rsquo;s awesome! To contribute to the showcase follow the steps below.
Folders The showcase is located at the root of the flogo repo and is structured as follows.
showcases ├── data │ ├── items.toml &amp;lt;-- the showcase data file  items.toml is the file that you&amp;rsquo;ll need to edit to add your activity, trigger or app.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://tibcosoftware.github.io/flogo/development/webui/activities/mongodb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/flogo/development/webui/activities/mongodb/</guid>
      <description>MongoDB This activity allows you to connect to a MongoDB server
Installation Flogo CLI flogo install github.com/TIBCOSoftware/flogo-contrib/activity/mongodb  Schema Inputs and Outputs:
{ &amp;quot;input&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;uri&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;dbName&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;collection&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;method&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot;, &amp;quot;allowed&amp;quot;: [ &amp;quot;DELETE&amp;quot;, &amp;quot;INSERT&amp;quot;, &amp;quot;REPLACE&amp;quot;, &amp;quot;UPDATE&amp;quot; ], &amp;quot;value&amp;quot;: &amp;quot;INSERT&amp;quot;, &amp;quot;required&amp;quot;: true }, { &amp;quot;name&amp;quot;: &amp;quot;keyName&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;keyValue&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;string&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;value&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;any&amp;quot; } ], &amp;quot;output&amp;quot;: [ { &amp;quot;name&amp;quot;: &amp;quot;output&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;any&amp;quot; }, { &amp;quot;name&amp;quot;: &amp;quot;count&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;integer&amp;quot; } ] }  Settings    Setting Required Description     uri True The MongoDB connection URI   dbName True The name of the database   collection True The collection to work on   method True The method type (DELETE, INSERT, UPDATE or REPLACE).</description>
    </item>
    
  </channel>
</rss>